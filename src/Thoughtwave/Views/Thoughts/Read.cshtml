@model ThoughtViewModel

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


@{
    ViewData["Title"] = @Model.Title;
}

@if (Model.Image != null)
{
    <header class="intro-header" style="background-image: url('@Model.Image')">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                    <div class="site-heading">
                        <h1>@Model.Title</h1>
                    </div>
                </div>
            </div>
        </div>
    </header>
}
else
{
    @await Html.PartialAsync("_PageHeader", @Model.Title)
}

@await Html.PartialAsync("_FlashMessage")

 <!-- Thought Content -->
<article>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="well well-lg clearfix">
                    <div class="text-center">
                        <h1 class="section-heading">@Model.Title</h1>
                        <p class="text-muted">
                            Posted by 
                            <a asp-action="Details" 
                                asp-controller="Users" 
                                asp-route-username="@Model.Author.UserName">
                                @Model.Author.FullName
                            </a> 
                            on @Model.CreatedOn.ToString("MM/dd/yyyy") in 
                            <a asp-action="CategoryIndex" 
                                asp-controller="Thoughts" 
                                asp-route-categoryId="@Model.Category">
                                @Model.Category
                            </a>
                        </p>
                        @if (Model.Tags != null && Model.Tags.Length > 0)
                        {
                            <p>
                                Tags: 
                                @foreach (var tag in Model.TagList)
                                {
                                    <a asp-action="TagIndex" asp-controller="Thoughts" 
                                        asp-route-tag="@tag" class="tag-link">
                                        @tag
                                    </a>
                                }
                            </p>
                        }
                    </div>
                    <div class="lead">
                        @Html.Raw(WebUtility.HtmlDecode(Model.Content))
                    </div>
                    <hr />
                </div>
            </div>             
        </div>
    </div>
</article>

<!-- Author info and comments -->
<div class="container">
    <div class="row">  
        <div class="col-md-12">
            <h1 class="text-center">About The Author</h1>

            @await Html.PartialAsync("_UserPartial", @Model.Author)

            @if (Model.DisableComments == true)
            {
                <h3 class="text-center text-muted">Comments are currently disabled for this thought</h3>
            }
            else
            {
                <div class="well">
                    <!-- Comment Form -->     
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <!-- Comments Form -->
                        <h4>Leave a Comment:</h4>
                        <form role="form" method="POST" 
                            asp-controller="Comments" 
                            asp-action="Create" 
                            asp-route-thoughtId="@Model.Id"
                            id="comment-form"
                            asp-anti-forgery="true">
                            <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                            <div class="form-group">
                                <textarea class="form-control" rows="4" name="content" id="comment-content"></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </form>
                    }
                    else 
                    {
                        <h4 class="text-center">
                            You must <a asp-action="Login" asp-controller="Account" asp-route-returnUrl="@Context.Request.Path">Log In</a> 
                            or <a asp-action="Register" asp-controller="Account" asp-route-returnUrl="@Context.Request.Path">Register</a> to leave a comment
                        </h4>
                    }
                </div>

                <hr />
                <br />

                <!-- Posted Comments -->
                <!-- Comment -->
                @if (!Model.Comments.Any())
                {
                    <h2 class="text-center text-muted">No comments to display</h2>
                }
                else
                {
                    <h2 id="comment-heading" class="text-center">
                        <i id="show-icon" class="fa fa-arrow-down" aria-hidden="true"></i> View @Model.NumberOfComments Comments
                    </h2>
                    <div id="comment-section">
                        @foreach (var comment in Model.Comments)
                        {
                            @await Html.PartialAsync("_CommentPartial", comment)
                        }
                    </div>
                }
            }
        </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">

        $(document).ready(function() {

            // show/hide comment section
            $('#comment-section').hide();
            var $defaultCommentHeading = $('#comment-heading').html();

            $('#comment-heading').on('click', function () {
                var hideCommentHeading = '<i id="hide-icon" class="fa fa-arrow-up" aria-hidden="true"></i> Hide Comments';
                if ($('#show-icon').is(":visible")) {
                    $(this).html(hideCommentHeading);
                } else {
                    $(this).html($defaultCommentHeading);
                }
                $(this).next().slideToggle();
            }).next().hide();

            // validate comment submission form
            var $commentForm = $('#comment-form');
            var $commentContent = $('#comment-content');
            $commentForm.on('submit', function(e) {
                var validtionSuccess = true;
                if (!$commentContent.val()) {
                    $commentContent.addClass('comment-validation-error');
                    var errMsg = '<ul class="text-danger" id="name-val-msg"><li>You forgot to write your comment!</li></ul>';
                    $commentForm.prepend(errMsg);
                    return false;
                }              

                return true;
            });
            
            // remove validation errors
            $commentContent.keypress(function(e) {
                $commentContent.removeClass('comment-validation-error');
                $('#name-val-msg').remove();
            });

            // show confirm box for comment removal
            $('.btn-remove').on('click', function(e) {
                if (!confirm('Are you sure you want to delete this comment?')) {
                    // stop form submission
                    e.preventDefault();
                }
            });

            // show comment editor on click or mouseover
            $('.user-comment').on('click mouseover', function(e) {
                $(this).addClass('comment-editor');
                $(this).focus();
            });

            // remove comment editor class
            $('.user-comment').on('blur mouseleave', function(e) {
                $(this).removeClass('comment-editor');
                $(this).blur();
            });

            // handle edit form submission
            $('.btn-edit').on('click', function(e) {
                // stop form submission
                e.preventDefault();

                // get correct edit form
                var $updateForm = $(this).closest('form');
                var id = $updateForm.attr('id');

                // update hidden value
                var $commentBox = $('#content' + id);
                var updatedContent = $commentBox.html();

                // check for comment content
                if (updatedContent.length <= 0) {
                    $commentBox.addClass('comment-validation-error');
                    $commentBox.append(errMsg);
                } else {
                    // form is valid - update hidden val and submit form
                    $('#hidden' + id).val(updatedContent);
                    $updateForm.submit();
                }
            });
        });

    </script>
}