@model Thought

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


@{
    ViewData["Title"] = @Model.Title;
}

@await Html.PartialAsync("_PageHeader")

@await Html.PartialAsync("_FlashMessage")

 <!-- Thought Content -->
<article>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="well well-lg clearfix">
                    <div class="text-center">
                        <h1 class="section-heading">@Model.Title</h1>
                        <p class="text-muted">
                            Posted by 
                            <a asp-action="Details" 
                                asp-controller="Users" 
                                asp-route-username="@Model.Author.UserName">
                                @Model.Author.FullName
                            </a> 
                            on @Model.CreatedOn.ToString("MM/dd/yyyy") in 
                            <a asp-action="CategoryIndex" 
                                asp-controller="Thoughts" 
                                asp-route-categoryId="@Model.Category">
                                @Model.Category
                            </a>
                        </p>
                        @if (Model.Tags != null && Model.Tags.Length > 0)
                        {
                            <p>
                                Tags: 
                                @foreach (var tag in Model.TagList)
                                {
                                    <a>@tag</a>
                                }
                            </p>
                        }
                    </div>
                    <div class="lead">
                        @Html.Raw(WebUtility.HtmlDecode(Model.Content))
                    </div>
                    <hr />
                </div>
            </div>             
        </div>
    </div>
</article>

<!-- Author info and comments -->
<div class="container">
    <div class="row">  
        <div class="col-md-12">
            <h1 class="text-center">About The Author</h1>

            @await Html.PartialAsync("_UserPartial", @Model.Author)

            @if (Model.DisableComments == true)
            {
                <h3 class="text-center text-muted">Comments are currently disabled for this thought</h3>
            }
            else
            {
                <div class="well">
                    <!-- Comment Form -->     
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <!-- Comments Form -->
                        <h4>Leave a Comment:</h4>
                        <form role="form" method="POST" 
                            asp-controller="Comments" 
                            asp-action="Create" 
                            asp-route-thoughtId="@Model.Id"
                            id="comment-form"
                            asp-anti-forgery="true">
                            <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                            <div class="form-group">
                                <textarea class="form-control" rows="4" name="content" id="comment-content"></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </form>
                    }
                    else 
                    {
                        <h4 class="text-center">
                            You must <a asp-action="Login" asp-controller="Account">Log In</a> 
                            or <a asp-action="Register" asp-controller="Account">Register</a> to leave a comment
                        </h4>
                    }
                </div>

                <hr />
                <br />

                <!-- Posted Comments -->
                <!-- Comment -->
                @if (!Model.Comments.Any())
                {
                    <h2 class="text-center text-muted">No comments to display</h2>
                }
                else
                {
                    foreach (var comment in @Model.Comments)
                    {
                        <div class="media">
                            <a asp-action="Details" 
                                asp-controller="Users" 
                                asp-route-username="@comment.User.UserName" 
                                class="pull-left">
                                <img class="media-object img-responsive user-img" 
                                    src="@comment.User.Avatar" alt="User Image">
                            </a>
                            <div class="media-body">
                                <h4 class="media-heading">
                                    <a asp-action="Details" 
                                        asp-controller="Users" 
                                        asp-route-username="@comment.User.UserName">
                                        @comment.User.FullName
                                    </a> 
                                    <small>
                                        @comment.CreatedOn.ToString("MM/dd/yyyy hh:mm tt")
                                    </small>
                                </h4>
                                @if (SignInManager.IsSignedIn(User) 
                                    && (await UserManager.GetUserAsync(User)).Id == comment.User.Id)
                                {
                                    <div class="comment-content user-comment" 
                                        contenteditable="true" id="@string.Concat("content", comment.Id)">
                                        @comment.Content
                                    </div>
                                    <div class="row">   
                                        <div class="form-group col-md-6"> 
                                            <form role="form" method="POST" 
                                                asp-controller="Comments" 
                                                asp-action="Update" 
                                                asp-route-thoughtId="@Model.Id"
                                                asp-route-commentId="@comment.Id"
                                                asp-anti-forgery="true"
                                                id="@comment.Id">
                                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                                <input type="hidden" name="userName" value="@comment.User.UserName" />
                                                <input type="hidden" name="updatedContent" id="@string.Concat("hidden", comment.Id)" />
                                                <button type="submit" class="btn btn-link btn-edit">
                                                    <span class="text-success">Update</span>
                                                </button>
                                            </form>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <form role="form" method="POST" 
                                                asp-controller="Comments" 
                                                asp-action="Delete" 
                                                asp-route-thoughtId="@Model.Id"
                                                asp-route-commentId="@comment.Id"
                                                asp-anti-forgery="true">
                                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                                <input type="hidden" name="userName" value="@comment.User.UserName" />
                                                <button type="submit" class="btn btn-link btn-remove">
                                                    <span class="text-danger">Remove</span>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="comment-content">
                                        @comment.Content
                                    </div>
                                }
                            </div>
                        </div>
                        <hr />
                    } 
                }
            }
        </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">

        $(document).ready(function() {

            // validate comment submission form
            var $commentForm = $('#comment-form');
            var $content = $('#comment-content');
            $commentForm.on('submit', function(e) {
                //check for validation success
                var validtionSuccess = true;
                if (!$content.val()) {
                    $content.addClass('comment-validation-error');
                    var errMsg = '<ul class="text-danger" id="name-val-msg"><li>You forgot to write your comment!</li></ul>';
                    $commentForm.prepend(errMsg);
                    return false;
                }              

                return true;
            });
            
            // remove validation errors
            $content.keypress(function(e) {
                $content.removeClass('comment-validation-error');
                $('#name-val-msg').remove();
            });

            // show confirm box for comment removal
            $('.btn-remove').on('click', function(e) {
                if (!confirm('Are you sure you want to delete this comment?')) {
                    // stop form submission
                    e.preventDefault();
                }
            });

            // show comment editor for logged in users comments
            $('.user-comment').on('click mouseover', function(e) {
                $(this).addClass('comment-editor');
                $(this).focus();
            });

            $('.user-comment').on('blur mouseleave', function(e) {
                $(this).removeClass('comment-editor');
                $(this).blur();
            });

            // handle edit form submission
            $('.btn-edit').on('click', function(e) {
                // stop form submission
                e.preventDefault();

                // get correct edit form
                var $updateForm = $(this).closest('form');
                var id = $updateForm.attr('id');

                // update hidden value
                var updatedContent = $('#content' + id).html();
                $('#hidden' + id).val(updatedContent);
                $updateForm.submit();
            });
        });

    </script>
}